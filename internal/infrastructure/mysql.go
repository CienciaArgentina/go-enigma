package infrastructure

import (
	"errors"
	"fmt"
	"github.com/CienciaArgentina/go-enigma/config"
	_ "github.com/go-sql-driver/mysql"
	"github.com/jmoiron/sqlx"
)

var (
	errNoConfig = errors.New("No hay archivo de configuraci√≥n para la db")
)

func New(c *config.Configuration) *sqlx.DB {
	if c == nil {
		panic(errNoConfig)
	}
	db, err := sqlx.Connect("mysql", fmt.Sprintf("%s:%s@tcp(%s:%s)/%s", c.Database.Username, c.Database.Password, c.Database.Hostname, c.Database.Port, c.Database.Database))
	if err != nil {
		panic(err)
	}

	if err = db.Ping(); err != nil {
		panic(err)
	}

	CreateTables(db)

	return db
}

func CreateTables(db *sqlx.DB) {
	// String format was auto generated by Goland
	db.MustExec("CREATE TABLE IF NOT EXISTS `auth` " +
		"(`auth_id` bigint(20) NOT NULL AUTO_INCREMENT, " +
		"`username` varchar(100) NOT NULL,  " +
		"`normalized_username` varchar(100) NOT NULL,  " +
		"`password_hash` varchar(255) NOT NULL,  " +
		"`lockout_enabled` tinyint(4) NOT NULL DEFAULT '0',  " +
		"`lockout_date` datetime DEFAULT NULL,  " +
		"`failed_login_attempts` smallint(6) NOT NULL DEFAULT '0',  " +
		"`date_created` datetime DEFAULT NULL,  " +
		"`security_token` varchar(255) DEFAULT NULL,  " +
		"`verification_token` varchar(255) DEFAULT NULL, " +
		"`date_deleted` varchar(45) DEFAULT NULL,  " +
		"`user_profile_id` bigint(20) DEFAULT NULL,  " +
		"PRIMARY KEY (`auth_id`),  " +
		"KEY `idx_username` (`username`),  " +
		"KEY `idx_date_created` (`date_created`)) " +
		"ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;")

	db.MustExec("CREATE TABLE IF NOT EXISTS `users_email` " +
		"(	`user_email_id` bigint(20) NOT NULL AUTO_INCREMENT,		" +
		"`auth_id` bigint(20) NOT NULL,		" +
		"`email` varchar(150) NOT NULL,		" +
		"`normalized_email` varchar(150) NOT NULL,		" +
		"`verified_email` tinyint(4) NOT NULL DEFAULT '0',		" +
		"`verification_date` datetime DEFAULT NULL,		" +
		"`date_created` datetime DEFAULT NULL,		" +
		"`date_deleted` datetime DEFAULT NULL,		" +
		"PRIMARY KEY (`user_email_id`),		" +
		"KEY `idx_email` (`email`),		" +
		"KEY `idx_date_created` (`date_created`) /*!80000 INVISIBLE */,		" +
		"KEY `idx_normalized_email` (`normalized_email`),		" +
		"KEY `Email_Users_idx` (`auth_id`),		" +
		"CONSTRAINT `Email_Users` FOREIGN KEY (`auth_id`) REFERENCES `auth` (`auth_id`)	) " +
		"ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;")
}